"#stream.isbpl" include

def Boolean "java.lang.Boolean" JIO class =Boolean

def HTTPRequest "tudbut.net.http.HTTPRequest" JIO class =HTTPRequest
def HTTPRequestType "tudbut.net.http.HTTPRequestType" JIO class =HTTPRequestType

func main {
    def args =args
    "Java" try {
        def id 
        "/dev/stdin" STREAM.create.file.in stream =id
        Boolean TRUE JIO context =debug
        def s
        "> " puts
        id stream.readline =s
        def name
        def pw
        while { s -1 eq not } {
            "\n" puts
            s " " jstringsplit =s
            s alen 2 eq not if {
                "\n> " puts
                id stream.readline =s
                2 stop
            }
            s 0 aget =name
            s 1 aget =pw
            HTTPRequestType GET "https://tudbut.de" 83 "/api/getUUID?name=" name strconcat 0 anew HTTPRequest new5 =s
            s send0 parse0 getBody0 =s
            s "404" eq if {
                "\nError: User not found!\n\n> " puts
                id stream.readline =s
                2 stop
            }
            s dup puts =name "\n" puts

                HTTPRequestType GET
                "https://tudbut.de" 83 
                "/api/admin/setPassword"
                    "?uuid="     strconcat
                    name         strconcat 
                    "&key="      strconcat
                    args 0 aget  strconcat
                    "&password=" strconcat
                    pw           strconcat 
                0 anew 
            HTTPRequest new5 =s
            s send0 parse0 =s
            s getBody0 "\n" puts puts "\n\n> " puts
            id stream.readline =s
        }
    } { pop pop printStackTrace0 }
    0
}

func jstringsplit {
    "Java" try {
        def String "java.lang.String" JIO getclass =String
        1 anewput ( "split" "java.lang.String" JIO getclass 1 anewput String getDeclaredMethod2 ) invoke2
    } {
        puts puts printStackTrace0
    }
}
