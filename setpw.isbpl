"#stream.isbpl" include
"#time.isbpl" include

def fastputs
        "print" 
        "java.lang.Object" JIO getclass 1 anewput 
    "java.io.PrintStream" JIO getclass getDeclaredMethod2 
=fastputs
def sout "java.lang.System" JIO class out =sout

"use fastputs" #
func puts {
    sout swap 1 anewput fastputs invoke2 pop
}

"JIO" try {
    def HTTPRequest "tudbut.net.http.HTTPRequest" JIO class =HTTPRequest
    def HTTPRequestType "tudbut.net.http.HTTPRequestType" JIO class =HTTPRequestType
} {
    pop pop
    "Couldn't find tudbut.net.http! Please run with TuddyLIB!\n" puts
    "Correct usage: java -cp ISBPL.jar:TuddyLIB.jar ISBPL setpw.isbpl (pw)\n" puts
    1 exit
}

def Boolean "java.lang.Boolean" JIO class =Boolean
"Boolean TRUE JIO context =debug" #

func main {
    def args =args
    "Java" try {
        def id 
        "/dev/stdin" STREAM.create.file.in stream =id
        def s
        "> " puts
        id stream.readline =s
        def name
        def pw
        while { s -1 eq not } {
            s " " jstringsplit =s
            s alen 0 eq if {
                "> " puts
                id stream.readline =s
                2 stop
            }
            s 0 aget =name
            s alen 1 eq dup if {
                null =pw
            } not if {
                s 1 aget =pw
            }

            HTTPRequestType GET "https://tudbut.de" 83 "/api/getUUID?name=" name strconcat 0 anew HTTPRequest new5 =s
            s send0 parse0 getBody0 =s
            s "404" eq if {
                "Error: User not found!\n> " puts
                id stream.readline =s
                2 stop
            }
            s dup puts =name "\n" puts

            pw dup if {
                    HTTPRequestType GET
                    "https://tudbut.de" 83 
                    "/api/admin/setPassword"
                        "?uuid="     strconcat
                        name         strconcat 
                        "&key="      strconcat
                        args 0 aget  strconcat
                        "&password=" strconcat
                        pw           strconcat 
                    0 anew 
                HTTPRequest new5 =s
            } not if {
                "Sending deactivate...\n" puts
                    HTTPRequestType GET
                    "https://tudbut.de" 83 
                    "/api/admin/deactivate"
                        "?uuid="     strconcat
                        name         strconcat 
                        "&key="      strconcat
                        args 0 aget  strconcat
                    0 anew 
                HTTPRequest new5 =s
                s send0 parse0 =s
                s getBody0 puts "\nWaiting...\n" puts
                5000 sleep
                "Sending activate...\n" puts

                    HTTPRequestType GET
                    "https://tudbut.de" 83 
                    "/api/admin/enable"
                        "?uuid="     strconcat
                        name         strconcat 
                        "&key="      strconcat
                        args 0 aget  strconcat
                    0 anew 
                HTTPRequest new5 =s
            }
            s send0 parse0 =s
            s getBody0 puts "\n> " puts
            id stream.readline =s
        }
    } { pop pop printStackTrace0 }
    0
}

func jstringsplit {
    "Java" try {
        def String "java.lang.String" JIO getclass =String
        1 anewput ( "split" "java.lang.String" JIO getclass 1 anewput String getDeclaredMethod2 ) invoke2
    } {
        puts puts printStackTrace0
    }
}
